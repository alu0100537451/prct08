class Matrices
	include Comparable
	include Enumerable

	def initialize(m)
		@filas = m.size
		@columnas = m[1].size
		@matriz = m
	end
	
	attr_reader :filas, :columnas, :matriz

#####String
	def to_s
                "#{@numerador}/#{@denominador}"
        end
#####Cálculo de Suma de Matrices Enteras
	def +(other)
              i=0
                 matriz_cp = @matriz
                while i < @filas
                        j=0
                        while j < @columnas
                           matriz_cp[i][j] = matriz_cp[i][j] + other.matriz[i][j]
                                j += 1
                        end
                        i += 1
                end
                Matrices.new(matriz_cp)
        end
####Cálculo Resta de Matrices Enteras    
        def - (other)
                i=0
                 matriz_cp = @matriz
                while i < @filas
                        j=0
                        while j < @columnas
                           matriz_cp[i][j] = matriz_cp[i][j] - other.matriz[i][j]
                                j += 1
                        end
                        i += 1
                end
                Matrices.new(matriz_cp)
        end


#####Calculo de Multiplicacion Mátrices enteras  
        def * (other)
                i=0
                 matriz_cp = Array.new(@filas) {Array.new(other.columnas,0)}
                while i < @filas
                        j=0
                        while j < other.columnas
                                matriz_cp[i][j] = 0
                                k=0
                                while k < @columnas 
                                   matriz_cp[i][j] = matriz_cp[i][j] + (matriz[i][k] * other.matriz[k][j])
                                        k+=1
                                end
                                j += 1
                        end
                        i += 1
                end
                Matrices.new(matriz_cp)
        end

end



